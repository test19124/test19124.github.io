{
    "version": "https://jsonfeed.org/version/1",
    "title": "test19124 • All posts by \"编程\" category",
    "description": "lzs的博客",
    "home_page_url": "https://test19124.github.io",
    "items": [
        {
            "id": "https://test19124.github.io/2021/08/10/517-lei-da-ti-jie/",
            "url": "https://test19124.github.io/2021/08/10/517-lei-da-ti-jie/",
            "title": "517雷达题解",
            "date_published": "2021-08-10T13:43:33.000Z",
            "content_html": "<h1 id=\"雷达-第二课-贪心算法-区间覆盖字典序-2020最新版提高组初级课程\"><a class=\"markdownIt-Anchor\" href=\"#雷达-第二课-贪心算法-区间覆盖字典序-2020最新版提高组初级课程\">#</a> 雷达 - 第二课：贪心算法 - 区间覆盖 / 字典序 - 2020 最新版提高组初级课程</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly81MTdjb2RpbmcuY29tL3AvNDAwMA==\">题目链接</span></p>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>用勾股定理求出区间</p>\n<p>转化成区间覆盖问题</p>\n<span id=\"more\"></span>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">jgt</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">double</span> z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">100010</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">cmp</span><span class=\"token punctuation\">(</span>jgt a<span class=\"token punctuation\">,</span>jgt b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>z<span class=\"token operator\">&lt;</span>b<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>ans<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  cin<span class=\"token operator\">>></span>n<span class=\"token operator\">>></span>d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">bool</span> flag<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    cin<span class=\"token operator\">>></span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">>></span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">//cout&lt;&lt;a[i].x&lt;&lt;\" \"&lt;&lt;a[i].y&lt;&lt;endl;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">></span>d<span class=\"token operator\">||</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">*</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      flag<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>z<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>d<span class=\"token operator\">*</span>d<span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">+</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>cmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">double</span> tmp<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>tmp<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>tmp<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">></span>d<span class=\"token operator\">*</span>d<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      tmp<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "517提高组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/10/517-zui-da-yu-shu-ti-jie/",
            "url": "https://test19124.github.io/2021/08/10/517-zui-da-yu-shu-ti-jie/",
            "title": "517最大余数题解",
            "date_published": "2021-08-10T13:39:55.000Z",
            "content_html": "<h1 id=\"最大余数-第一课-枚举技巧-状压折半尺取法-2020最新版提高组初级课程\"><a class=\"markdownIt-Anchor\" href=\"#最大余数-第一课-枚举技巧-状压折半尺取法-2020最新版提高组初级课程\">#</a> 最大余数 - 第一课：枚举技巧 - 状压 / 折半 / 尺取法 - 2020 最新版提高组初级课程</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly81MTdjb2RpbmcuY29tL3AvMzk4MA==\">题目链接</span></p>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>折半 + 二进制枚举</p>\n<p>注意 b 数组要排个序～</p>\n<span id=\"more\"></span>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>mod<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1000010</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1000010</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> tot<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">int</span> ans<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span>tot<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;=</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">int</span> mid<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">+</span>r<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;=</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      ans<span class=\"token operator\">=</span>b<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      l<span class=\"token operator\">=</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      r<span class=\"token operator\">=</span>mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>mod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">%=</span>mod<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">int</span> m<span class=\"token operator\">=</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">int</span> tmp<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        tmp<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>mod<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    b<span class=\"token punctuation\">[</span>tot<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span>b<span class=\"token operator\">+</span>tot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  m<span class=\"token operator\">=</span>n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token keyword\">int</span> ans<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">int</span> tmp<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">int</span> jj<span class=\"token operator\">=</span>j<span class=\"token operator\">+</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        tmp<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>mod<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>mod<span class=\"token operator\">-</span>tmp<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    ans<span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ans<span class=\"token operator\">==</span>mod<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "517提高组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/10/517-zui-xiao-zi-dian-xu-ti-jie/",
            "url": "https://test19124.github.io/2021/08/10/517-zui-xiao-zi-dian-xu-ti-jie/",
            "title": "517最小字典序题解",
            "date_published": "2021-08-10T13:31:51.000Z",
            "content_html": "<h1 id=\"最大余数-第二课-贪心算法-区间覆盖字典序-2020最新版提高组初级课程\"><a class=\"markdownIt-Anchor\" href=\"#最大余数-第二课-贪心算法-区间覆盖字典序-2020最新版提高组初级课程\">#</a> 最大余数 - 第二课：贪心算法 - 区间覆盖 / 字典序 - 2020 最新版提高组初级课程</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly81MTdjb2RpbmcuY29tL3AvMzk4MA==\">题目链接</span></p>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>两边取小的往内贪心</p>\n<p>如果相同则比较下一层大小</p>\n<span id=\"more\"></span>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>tot<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">char</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">2010</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%s\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">bool</span> flag<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>r<span class=\"token operator\">-</span>l<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>l<span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span>a<span class=\"token punctuation\">[</span>r<span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        flag<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>l<span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">[</span>r<span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      l<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      r<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    tot<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tot<span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "517提高组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/10/517-yi-huo-he-ti-jie/",
            "url": "https://test19124.github.io/2021/08/10/517-yi-huo-he-ti-jie/",
            "title": "517异或和题解",
            "date_published": "2021-08-10T13:22:46.000Z",
            "content_html": "<h1 id=\"按钮变色-第一课-枚举技巧-状压折半尺取法-2020最新版提高组初级课程\"><a class=\"markdownIt-Anchor\" href=\"#按钮变色-第一课-枚举技巧-状压折半尺取法-2020最新版提高组初级课程\">#</a> 按钮变色 - 第一课：枚举技巧 - 状压 / 折半 / 尺取法 - 2020 最新版提高组初级课程</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly81MTdjb2RpbmcuY29tL3AvMzk3MA==\">题目链接</span></p>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>尺取法加强，记得开 long long</p>\n<span id=\"more\"></span>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1200000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> suma<span class=\"token punctuation\">[</span><span class=\"token number\">1200000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> sumb<span class=\"token punctuation\">[</span><span class=\"token number\">1200000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    suma<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>suma<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    sumb<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>sumb<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> ans<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>suma<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>suma<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span>sumb<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>sumb<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    ans<span class=\"token operator\">+=</span>j<span class=\"token operator\">-</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lld\\n\"</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "517提高组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/10/517-zui-duan-lian-xu-zi-xu-lie-ti-jie/",
            "url": "https://test19124.github.io/2021/08/10/517-zui-duan-lian-xu-zi-xu-lie-ti-jie/",
            "title": "517最短连续子序列题解",
            "date_published": "2021-08-10T13:18:16.000Z",
            "content_html": "<h1 id=\"最短连续子序列-第一课-枚举技巧-状压折半尺取法-2020最新版提高组初级课程\"><a class=\"markdownIt-Anchor\" href=\"#最短连续子序列-第一课-枚举技巧-状压折半尺取法-2020最新版提高组初级课程\">#</a> 最短连续子序列 - 第一课：枚举技巧 - 状压 / 折半 / 尺取法 - 2020 最新版提高组初级课程</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly81MTdjb2RpbmcuY29tL3AvMzk2MA==\">题目链接</span></p>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>尺取法</p>\n<span id=\"more\"></span>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> sum<span class=\"token punctuation\">[</span><span class=\"token number\">1200000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1200000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    sum<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>sum<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">int</span> ans<span class=\"token operator\">=</span><span class=\"token number\">998244353</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>sum<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">>=</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>sum<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">>=</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      ans<span class=\"token operator\">=</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span>j<span class=\"token operator\">-</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ans<span class=\"token operator\">==</span><span class=\"token number\">998244353</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "517提高组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/09/debug-de-fang-fa-ji-ce-lue/",
            "url": "https://test19124.github.io/2021/08/09/debug-de-fang-fa-ji-ce-lue/",
            "title": "debug的方法及策略",
            "date_published": "2021-08-09T12:02:42.000Z",
            "content_html": "<p>C++ 以及普及组选手多使用静态查错法与输出调试法</p>\n<p>提高组选手可以适当使用对拍调试法</p>\n<p>[<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXNRNHkxSzdUNC8=\">https://www.bilibili.com/video/BV1sQ4y1K7T4/</span> 初级调试指南视频版]</p>\n<p>[<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWhlNDExcDc0WS8=\">https://www.bilibili.com/video/BV1he411p74Y/</span> 高级调试指南视频版]</p>\n<p>= 调试指南 =</p>\n<p>1：在草稿纸上模拟程序的运行，写下一些关键变量的中间结果</p>\n<p>2：利用打印调试法打印出这些中间变量的值</p>\n<p>3：对比观察</p>\n<span id=\"more\"></span>\n<p>下面介绍利用数据去查错的几种查错方法</p>\n<p>== 静态查错法 ==</p>\n<p>静态查错法的意思是说，写完程序，先整体浏览一遍代码，把一些肉眼可见的，明显发现是错的地方修改掉</p>\n<p>根据以往的经验，我们发现，一个选手功力越深，静态查错的时候能发现的问题越多，往往大多数错误不需要下面的方法就已经查出来了。</p>\n<p>== 输出调试法 ==</p>\n<p>首先，我们运行了一组数据，发现结果不对，然后静态查错也没看出什么来，这个时候我们采用输出调试法。</p>\n<p>1：先 分段  打印一些变量，观察变量的值跟预想的对不对，找到最先不对的地方，然后检查，这个时候下面的代码就不用看了</p>\n<p>2：不停的重复 1 的行为，不断的缩小定位错误区域，直到所有的错误修复完毕</p>\n<p>举个例子</p>\n<p>比如下面这个程序，题库链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly81MTdjb2RpbmcuY29tL3AvMTEwMA==\">https://517coding.com/p/1100</span></p>\n<pre><code class=\"language-c++\">#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nint a[10010];\nint b[10010];\nint main(void)&#123;\n\tint n,m;\n\tint k=-1e9;\n\tscanf(&quot;%d%d&quot;,&amp;n,&amp;m);\n\tfor(int i=1;i&lt;=n;i++) scanf(&quot;%d&quot;,&amp;a[i]);\n\tfor(int i=1;i&lt;=m;i++) scanf(&quot;%d&quot;,&amp;b[i]);\n\tfor(int i=1;i&lt;=n;i++) &#123;\n\t\tfor(int j=1;j&lt;=n;j++) &#123;\n\t\t    \n\t\t\tif(a[i]+b[j]&gt;k) &#123; \n\t\t//下面这行代码是用来打印调试的语句\n\t\t\t     printf(&quot;i=%d j=%d sum=%d\\n&quot;, i, j, a[i]+b[j]);\n\t\t\t     k=a[i]+b[j];\n\t\t\t&#125;\n\t\t&#125;\n       &#125;\n\tprintf(&quot;%d&quot;,k);\n\treturn 0;\n&#125;\n\n/*\n错误数据：\n\n2 3\n1 2\n1 2 3\n*/\n</code></pre>\n<p>我们可以在循环里面加一句 printf 语句打印关键信息，然后运行代码下方的错误数据，我们发现会输出如下信息</p>\n<pre><code class=\"language-c++\">2 3\n1 2\n1 2 3\ni=1 j=1 sum=2\ni=1 j=2 sum=3\ni=2 j=2 sum=4\n4\n</code></pre>\n<p>可以发现，答案明明是 5，但是却输出了 4，而且中间过程也并没有产生 5，而答案 5 是来自于第一个数组中的 2 与第二个数组中的 3 相加得到的，此时我们通过调试信息的输出并没有发现这两个数被同时枚举到，于是我们检查两个 for 循环，这个时候发现了两个 for 循环枚举的都是 1 到 n，而实际上，第二个循环应该枚举 1 到 m，修改之后，这个程序就可以正常通过了</p>\n<p>== 对拍调试法 ==</p>\n<p>=== <span class=\"exturl\" data-url=\"aHR0cDovL2R1aXBhaS5zaA==\">duipai.sh</span> ===</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">t</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token builtin class-name\">let</span> <span class=\"token string\">\"t = <span class=\"token variable\">$t</span> + 1\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">printf</span> <span class=\"token variable\">$t</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\":<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ./rand <span class=\"token operator\">></span> rand.txt</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ./AC <span class=\"token operator\">&lt;</span> rand.txt <span class=\"token operator\">></span> AC.out</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ./WA <span class=\"token operator\">&lt;</span> rand.txt <span class=\"token operator\">></span> WA.out</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">diff</span> AC.out WA.out<span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"WA<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function\">cat</span> rand.txt</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token builtin class-name\">break</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>=== run.bat ===</p>\n<pre><code class=\"language-bat\">:loop \n    @echo off   \n    gen.exe &gt; in.txt                     \n    my.exe &lt; in.txt  &gt; myout.txt     \n    std.exe &lt; in.txt  &gt; stdout.txt\n    fc myout.txt stdout.txt              \nif not errorlevel 1   goto loop         \npause\n</code></pre>\n<p>=== std.cpp ===</p>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main() &#123;\n  int a, b;\n  cin &gt;&gt; a &gt;&gt; b;\n  cout &lt;&lt; a + b &lt;&lt; endl;\n  return 0;\n&#125;\n</code></pre>\n<p>=== my.cpp ===</p>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n//这是一个错误程序\nint main() &#123;\n  int a, b;\n  cin &gt;&gt; a &gt;&gt;b;\n  if (a &gt; 130 &amp;&amp; b &gt; 130) &#123;\n    cout &lt;&lt; a - b &lt;&lt; endl;\n  &#125; else &#123;\n    cout &lt;&lt; a + b &lt;&lt; endl;\n  &#125;\n  return 0;\n&#125;\n</code></pre>\n<p>=== gen.cpp ===</p>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\n// 返回0到x-1之间的随机数\n// rand()函数返回 0-32767之间的一个随机数\nint get_rand(int x) &#123;\n  return rand() * rand() % x + 1;\n&#125;\n\n//返回L 到 R之间的整数\nint get_rand(int L, int R) &#123;\n  return rand() * rand() % (R-L+1) + L;\n&#125;\n\nint main() &#123;\n  //初始化随机种子\n  srand(time(0));\n  int a, b;\n\n  //生成一组随机数据\n  a = get_rand(1, 200);\n  b = get_rand(1, 200);\n  cout &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b &lt;&lt;endl;\n  return 0;\n&#125;\n\n</code></pre>\n",
            "tags": [
                "DEBUG"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/07/517-an-niu-bian-se-ti-jie/",
            "url": "https://test19124.github.io/2021/08/07/517-an-niu-bian-se-ti-jie/",
            "title": "517按钮变色题解",
            "date_published": "2021-08-07T11:59:11.000Z",
            "content_html": "<h1 id=\"按钮变色-第一课-枚举技巧-状压折半尺取法-2020最新版提高组初级课程\"><a class=\"markdownIt-Anchor\" href=\"#按钮变色-第一课-枚举技巧-状压折半尺取法-2020最新版提高组初级课程\">#</a> 按钮变色 - 第一课：枚举技巧 - 状压 / 折半 / 尺取法 - 2020 最新版提高组初级课程</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly81MTdjb2RpbmcuY29tL3AvMzk1MQ==\">题目链接</span></p>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>暴力 dfs</p>\n<p>易证：每个点最多会被翻转一次（2 次不就翻回来了吗 qwq）</p>\n<p>dfs 枚举每个点是否会被翻，查看当前是否全部同色</p>\n<span id=\"more\"></span>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">char</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> X<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> Y<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span>b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> xx<span class=\"token punctuation\">,</span>yy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    xx<span class=\"token operator\">=</span>x<span class=\"token operator\">+</span>X<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    yy<span class=\"token operator\">=</span>y<span class=\"token operator\">+</span>Y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>xx<span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;&amp;</span>xx<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token operator\">&amp;&amp;</span>yy<span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;&amp;</span>yy<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      a<span class=\"token punctuation\">[</span>xx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>yy<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>b<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">[</span>xx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>yy<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      x<span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token char\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token operator\">||</span>x<span class=\"token operator\">==</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">int</span> ans<span class=\"token operator\">=</span><span class=\"token number\">998244353</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> ansx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">==</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ansx <span class=\"token operator\">&lt;</span> ans<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        ans<span class=\"token operator\">=</span>ansx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ansx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token function\">change</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">%</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ansx<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token function\">change</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">%</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  b<span class=\"token punctuation\">[</span><span class=\"token char\">'w'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'b'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  b<span class=\"token punctuation\">[</span><span class=\"token char\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'w'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ans<span class=\"token operator\">==</span><span class=\"token number\">998244353</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Impossible\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "517提高组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/07/517-fu-gai-shu-zhou-ti-jie/",
            "url": "https://test19124.github.io/2021/08/07/517-fu-gai-shu-zhou-ti-jie/",
            "title": "517覆盖数轴题解",
            "date_published": "2021-08-07T06:37:42.000Z",
            "content_html": "<h1 id=\"覆盖数轴-第二课贪心算法-中级班517编程普及组\"><a class=\"markdownIt-Anchor\" href=\"#覆盖数轴-第二课贪心算法-中级班517编程普及组\">#</a> 覆盖数轴 - 第二课：贪心算法 -【中级班】517 编程普及组</h1>\n<h2 id=\"描述\"><a class=\"markdownIt-Anchor\" href=\"#描述\">#</a> 描述</h2>\n<blockquote>\n<p>有一个长度为 m 的数轴，现在有 n 个区间，每个区间有一个左右端点，现在需要选择最少的区间，覆盖整个数轴。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"输入\"><a class=\"markdownIt-Anchor\" href=\"#输入\">#</a> 输入</h2>\n<blockquote>\n<p>第一行两个整数 n 和 m<br>\n 接下来 n 行，每行两个整数，表示区间。</p>\n</blockquote>\n<h2 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h2>\n<blockquote>\n<p>输出最少的区间个数，覆盖整个数轴。如果无法覆盖，输出 - 1</p>\n</blockquote>\n<h2 id=\"样例\"><a class=\"markdownIt-Anchor\" href=\"#样例\">#</a> 样例</h2>\n<h3 id=\"输入1\"><a class=\"markdownIt-Anchor\" href=\"#输入1\">#</a> 输入 #1</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>5 6</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1 3</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>2 4</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>3 5</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>5 6</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>1 4</pre></td></tr></table></figure><h3 id=\"输出1\"><a class=\"markdownIt-Anchor\" href=\"#输出1\">#</a> 输出 #1</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>2</pre></td></tr></table></figure><h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>贪心，先按右侧端点排序<br>\n之后再取 左侧端点 &lt;= 右侧端点 + 1 的所有线段中右侧端点最远的点<br>\n达到 m 结束</p>\n<h2 id=\"易错点\"><a class=\"markdownIt-Anchor\" href=\"#易错点\">#</a> 易错点</h2>\n<ol>\n<li>左侧端点 &lt;= 右侧端点 <strong>+1</strong></li>\n<li>取所有线段中右侧端点最远的点</li>\n</ol>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">qj</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> s<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">100010</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">cmp</span><span class=\"token punctuation\">(</span>qj a<span class=\"token punctuation\">,</span>qj b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>s<span class=\"token operator\">==</span>b<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>t<span class=\"token operator\">&lt;</span>b<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>s<span class=\"token operator\">&lt;</span>b<span class=\"token punctuation\">.</span>s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  cin<span class=\"token operator\">>></span>n<span class=\"token operator\">>></span>m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cin<span class=\"token operator\">>></span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s<span class=\"token operator\">>></span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">+</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>cmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">int</span> t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>ans<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Max<span class=\"token punctuation\">,</span>x<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>flag<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    Max<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>s<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span>x<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      Max<span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>Max<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      x<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    t<span class=\"token operator\">=</span>Max<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">>=</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      flag<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "517普及组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/06/517-you-fu-huan-zui-duan-lu-jing-ti-jie/",
            "url": "https://test19124.github.io/2021/08/06/517-you-fu-huan-zui-duan-lu-jing-ti-jie/",
            "title": "517有负环最短路径题解",
            "date_published": "2021-08-06T09:14:51.000Z",
            "content_html": "<h1 id=\"有负环最短路径-第十课最短路径-中级班517编程普及组\"><a class=\"markdownIt-Anchor\" href=\"#有负环最短路径-第十课最短路径-中级班517编程普及组\">#</a> 有负环最短路径 - 第十课：最短路径 -【中级班】517 编程普及组</h1>\n<h2 id=\"描述\"><a class=\"markdownIt-Anchor\" href=\"#描述\">#</a> 描述</h2>\n<blockquote>\n<p>给定一个有向图，求 1 到 n 的最短路径。<br>\n可以判断图中是否有负环。</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"输入\"><a class=\"markdownIt-Anchor\" href=\"#输入\">#</a> 输入</h2>\n<blockquote>\n<p>第一行两个整数 n 和 m，表示点数和边数。<br>\n接下来 m 行，每行 3 个整数，表示一条有向边。</p>\n</blockquote>\n<h2 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h2>\n<blockquote>\n<p>如果图中有负环，输出 circle<br>\n 如果没有负环，但是从 1 无法到达 n，输出 can’t arrive!<br>\n 否则输出 1 到 n 的最短距离</p>\n</blockquote>\n<h2 id=\"样例\"><a class=\"markdownIt-Anchor\" href=\"#样例\">#</a> 样例</h2>\n<h3 id=\"输入1\"><a class=\"markdownIt-Anchor\" href=\"#输入1\">#</a> 输入 #1</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>3 3</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1 3 3</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1 2 1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>2 3 1</pre></td></tr></table></figure><h3 id=\"输出1\"><a class=\"markdownIt-Anchor\" href=\"#输出1\">#</a> 输出 #1</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>2</pre></td></tr></table></figure><h3 id=\"输入2\"><a class=\"markdownIt-Anchor\" href=\"#输入2\">#</a> 输入 #2</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>3 3</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1 2 1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>2 1 -2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>2 3 1</pre></td></tr></table></figure><h3 id=\"输出2\"><a class=\"markdownIt-Anchor\" href=\"#输出2\">#</a> 输出 #2</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>circle</pre></td></tr></table></figure><h3 id=\"输入3\"><a class=\"markdownIt-Anchor\" href=\"#输入3\">#</a> 输入 #3</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>3 2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1 2 1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>2 1 1</pre></td></tr></table></figure><h3 id=\"输出3\"><a class=\"markdownIt-Anchor\" href=\"#输出3\">#</a> 输出 #3</h3>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>can't arrive!</pre></td></tr></table></figure><h2 id=\"提示\"><a class=\"markdownIt-Anchor\" href=\"#提示\">#</a> 提示</h2>\n<blockquote>\n<p>n≤200<br>\nm≤2000</p>\n</blockquote>\n<hr>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>这题就是标准负环最短路</p>\n<h2 id=\"易错点\"><a class=\"markdownIt-Anchor\" href=\"#易错点\">#</a> 易错点</h2>\n<ol>\n<li>中转边必须有边才能转移： <code>if(g[u][i]!=998244353&amp;&amp;g[i][v]!=998244353)</code></li>\n<li><code>g[u][v]</code>  可以等于  <code>998244353</code></li>\n</ol>\n<h2 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> g<span class=\"token punctuation\">[</span><span class=\"token number\">210</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">210</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  cin<span class=\"token operator\">>></span>n<span class=\"token operator\">>></span>m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">!=</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        g<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">998244353</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">int</span> u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    cin<span class=\"token operator\">>></span>u<span class=\"token operator\">>></span>v<span class=\"token operator\">>></span>w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    g<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> u<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> u<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> u<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> v<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> v<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> v<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">998244353</span><span class=\"token operator\">&amp;&amp;</span>g<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">998244353</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>g<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>g<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            g<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>g<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>g<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"circle\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">998244353</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"can't arrive!\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    cout<span class=\"token operator\">&lt;&lt;</span>g<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "517普及组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/01/517-pin-tu-you-xi-ti-jie/",
            "url": "https://test19124.github.io/2021/08/01/517-pin-tu-you-xi-ti-jie/",
            "title": "517拼图游戏题解",
            "date_published": "2021-08-01T02:55:04.000Z",
            "content_html": "<h1 id=\"拼图游戏-第四课广搜-中级班517编程普及组\"><a class=\"markdownIt-Anchor\" href=\"#拼图游戏-第四课广搜-中级班517编程普及组\">#</a> 拼图游戏 - 第四课：广搜 -【中级班】517 编程普及组</h1>\n<p><img data-src=\"https://i.loli.net/2021/07/25/4xMjbA9NZi2sHVD.png\" alt=\"拼图游戏-第四课：广搜-【中级班】517编程普及组\"></p>\n<span id=\"more\"></span>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint mod=1000007;\nint ji[1000010];\nint top;\nint me[1000010],to[1000010];\n\nint X[4]=&#123;0,1&#125;;\nint Y[4]=&#123;1,0&#125;;\n\nstruct zb &#123;\n  int a[5][5];\n  int ans;\n&#125;;\nqueue&lt;zb&gt;q;\n\nvoid out(int a[5][5]) &#123;\n  for(int i=1;i&lt;=3;i++) &#123;\n    for(int j=1;j&lt;=3;j++) &#123;\n      cout&lt;&lt;a[i][j];\n    &#125;\n    cout&lt;&lt;endl;\n  &#125;\n&#125;\n\nvoid outji() &#123;\n  cout&lt;&lt;top&lt;&lt;endl;\n  for(int i=0;i&lt;mod;i++) &#123;\n    if(ji[i]) &#123;\n      for(int j=ji[i];;j=to[j]) &#123;\n        cout&lt;&lt;me[j]&lt;&lt;&quot;--&gt;&quot;;\n        if(to[j]==0) &#123;\n          break;\n        &#125;\n      &#125;\n      cout&lt;&lt;ji[i]&lt;&lt;endl;\n    &#125;\n  &#125;\n&#125;\n\nint copy(int &amp;a,int b[5][5]) &#123;\n  a=0;\n  for(int i=1;i&lt;=3;i++) &#123;\n    for(int j=1;j&lt;=3;j++) &#123;\n      a=a*10+b[i][j];\n    &#125;\n  &#125;\n  return a;\n&#125;\n\nbool find(int x) &#123;\n  for(int i=ji[x%mod];to[i]!=0;i=to[i]) &#123;\n    if(me[i]==x) &#123;\n      return true;\n    &#125;\n  &#125;\n  return false;\n&#125;\n\nvoid in(int x) &#123;\n  if(ji[x%mod]==0) &#123;\n    top++;\n    ji[x%mod]=top;\n    me[top]=x;\n    return;\n  &#125;\n  for(int i=ji[x%mod];;i=to[i]) &#123;\n    if(to[i]==0) &#123;\n      top++;\n      to[i]=top;\n      me[top]=x;\n      return;\n    &#125;\n  &#125;\n&#125;\n\nzb push(int a[5][5],int ans) &#123;\n  zb x;\n  for(int i=1;i&lt;=3;i++) &#123;\n    for(int j=1;j&lt;=3;j++) &#123;\n      x.a[i][j]=a[i][j];\n    &#125;\n  &#125;\n  x.ans=ans;\n  q.push(x);\n  return x;\n&#125;\n\nint bfs(int a[5][5]) &#123;\n  \n  zb k;\n  int h;\n  \n  push(a,0);\n  in(copy(h,a));\n  \n  while(!q.empty()) &#123;\n  \n    k=q.front();\n    q.pop();\n  \n    copy(h,k.a);\n    if(h==12345678) &#123;\n      return k.ans;\n    &#125;\n\n    //cout&lt;&lt;k.ans&lt;&lt;endl;\n    //out(k.a);\n  \n    for(int x=1;x&lt;=3;x++) &#123;\n      for(int y=1;y&lt;=3;y++) &#123;\n        for(int i=0;i&lt;2;i++) &#123;\n          if(x+X[i]&gt;3||y+Y[i]&gt;3);\n          else &#123;\n            swap(k.a[x][y],k.a[x+X[i]][y+Y[i]]);\n            copy(h,k.a);\n            if(!find(h)) &#123;\n              in(h);\n              push(k.a,k.ans+1);\n            &#125;\n            swap(k.a[x][y],k.a[x+X[i]][y+Y[i]]);\n          &#125;\n        &#125;\n        /*\n        if(find()) &#123;\n          return;\n        &#125;\n        for(int i=0;i&lt;4;i++) &#123;\n          if(x+X[i]&lt;=0||y+Y[i]&lt;=0||x+X[i]&gt;3||y+Y[i]&gt;3||vis[x+X[i]][y+Y[i]]);\n          else &#123;\n            vis[x][y]=true;\n            dfs(x+X[i],y+Y[i]);\n            swap(a[x][y],a[x+X[i]][y+Y[i]]);\n            //cout&lt;&lt;&quot;swap &quot;&lt;&lt;a[x][y]&lt;&lt;&quot; and &quot;&lt;&lt;a[x+X[i]][y+Y[i]]&lt;&lt;endl;\n            dfs(x+X[i],y+Y[i],ansx+1);\n            swap(a[x][y],a[x+X[i]][y+Y[i]]);\n            vis[x][y]=false;\n          &#125;\n        &#125;\n        if(l==k) &#123;\n          l=q.back();\n          ans++;\n        &#125;\n        */\n      &#125;\n    &#125;\n    //outji();\n  &#125;\n  return 0;\n&#125;\n\nint main() &#123;\n  \n  int x;\n  int a[5][5];\n  \n  for(int i=1;i&lt;=3;i++) &#123;\n    cin&gt;&gt;x;\n    for(int j=3;j&gt;=1;j--) &#123;\n      a[i][j]=x%10;\n      x/=10;\n    &#125;\n  &#125;\n  \n  int ans;\n  copy(ans,a);\n  if(ans==12345678) &#123;\n    cout&lt;&lt;0&lt;&lt;endl;\n  &#125; else &#123;\n    cout&lt;&lt;bfs(a)&lt;&lt;endl;\n  &#125;\n  \n  return 0;\n&#125;\n</code></pre>\n",
            "tags": [
                "517普及组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/08/01/dao-jiu-ti-jie/",
            "url": "https://test19124.github.io/2021/08/01/dao-jiu-ti-jie/",
            "title": "517倒酒题解",
            "date_published": "2021-08-01T02:50:11.000Z",
            "content_html": "<h1 id=\"倒酒-第四课广搜-中级班517编程普及组\"><a class=\"markdownIt-Anchor\" href=\"#倒酒-第四课广搜-中级班517编程普及组\">#</a> 倒酒 - 第四课：广搜 -【中级班】517 编程普及组</h1>\n<p><img data-src=\"https://i.loli.net/2021/07/26/XIlbcxZomf79Bve.png\" alt=\"倒酒-第四课：广搜-【中级班】517编程普及组\"></p>\n<p>思路：广搜</p>\n<span id=\"more\"></span>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std; \n\nint a[3];\nint vis[160][160][160]; \n\nstruct jgt &#123;\n  int a[3];\n  int ans;\n&#125;; \nqueue&lt;jgt&gt;q;\n\nbool find(jgt f) &#123; // 均分\n  if(f.a[0]==f.a[1]&amp;&amp;f.a[2]==0)\n    return true;\n  if(f.a[0]==f.a[2]&amp;&amp;f.a[1]==0)\n    return true;\n  if(f.a[1]==f.a[2]&amp;&amp;f.a[0]==0)\n    return true;\n  return false;\n&#125; \n\njgt push(int a,int b,int c,int ans) &#123; // 入队\n  jgt x;\n  vis[a][b][c]=true;\n  x.a[0]=a;\n  x.a[1]=b;\n  x.a[2]=c;\n  x.ans=ans;\n  q.push(x);\n  return x;\n&#125;\n\nvoid copy(jgt &amp;a,jgt b) &#123; // 拷贝\n  for(int i=0;i&lt;3;i++) &#123;\n    a.a[i]=b.a[i];\n  &#125;\n  a.ans=b.ans;\n&#125;\n\nvoid bfs() &#123;\n  jgt k,l;  // 定义\n  push(a[0],0,0,0); // 初始数据入队\n  while(!q.empty()) &#123; // 队列不为空\n    k=q.front(); // 取出队首\n    q.pop(); // 删除队首\n    for(int i=0; i&lt;3; i++) &#123; // 枚举准备倒的杯\n      for(int j=0; j&lt;3; j++) &#123; // 枚举被倒的杯\n        if(i!=j) &#123; // 不能倒给自己\n          if(find(k)) &#123; // 如果当前已均分\n            cout&lt;&lt;k.ans&lt;&lt;endl; // 输出\n            return;// 结束函数\n          &#125;\n          copy(l,k); // 拷贝k到l\n          int x=a[j]-l.a[j]; // x=原先被倒的杯里的酒-现在这个杯里的酒\n          if(l.a[i]&gt;=x) &#123; // 如果溢出\n            l.a[j]=a[j]; // 灌满被倒的杯\n            l.a[i]-=x; // 剩余的酒留在杯中\n          &#125; else &#123; // 否则\n            l.a[j]+=l.a[i]; // 全倒过去\n            l.a[i]=0; // 原来的杯清零\n          &#125;\n          l.ans++; // 倒的次数++\n          if(vis[l.a[0]][l.a[1]][l.a[2]]==false) &#123; // 当前状态没有被记录\n            vis[l.a[0]][l.a[1]][l.a[2]]=true; // 记录当前状态\n            q.push(l); // 记录入队\n          &#125;\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n  //没办法平均分\n  cout&lt;&lt;&quot;NO&quot;&lt;&lt;endl;\n&#125;\n\nint main() &#123;\n  for(int i=0;i&lt;3;i++) &#123;\n    cin&gt;&gt;a[i];\n  &#125;\n  bfs();\n  return 0;\n&#125;\n</code></pre>\n",
            "tags": [
                "517普及组"
            ]
        },
        {
            "id": "https://test19124.github.io/2021/07/24/mi-gong/",
            "url": "https://test19124.github.io/2021/07/24/mi-gong/",
            "title": "517迷宫题解",
            "date_published": "2021-07-24T09:15:46.000Z",
            "content_html": "<h1 id=\"迷宫-第四课广搜-中级班517编程普及组\"><a class=\"markdownIt-Anchor\" href=\"#迷宫-第四课广搜-中级班517编程普及组\">#</a> 迷宫 - 第四课：广搜 -【中级班】517 编程普及组</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly81MTdjb2RpbmcuY29tL2NvbnRlc3QvcHJvYmxlbT9pZD00OTgmYW1wO3BpZD0xI3Byb2JsZW0tYW5jaG9y\">迷宫 - 第四课：广搜 -【中级班】517 编程普及组 </span></p>\n<h2 id=\"做法1-在队列中记录层的分界线\"><a class=\"markdownIt-Anchor\" href=\"#做法1-在队列中记录层的分界线\">#</a> 做法 1 - 在队列中记录层的分界线</h2>\n<h3 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">ru</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">u</span></span></span></span> 记录当前层的最后一个节点，如果被访问到的节点 ==<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">ru</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">u</span></span></span></span> 说明这一层的所有节点都被访问到</p>\n<p>也就说明了这一层的所有节点的子节点（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> 层的所有节点）都已入队列，此时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">ru</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">u</span></span></span></span> 应更新为队尾元素</p>\n<h3 id=\"易错点\"><a class=\"markdownIt-Anchor\" href=\"#易错点\">#</a> 易错点</h3>\n<p>如果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">ru</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">u</span></span></span></span> 出现多次应该在最后一次出现时更新<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">ru</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">u</span></span></span></span></p>\n<p>即，在入栈的同时就标记被访问过（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">a_{i,j}=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>），不是访问到再标记！</p>\n<span id=\"more\"></span>\n<h3 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h3>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint n,m;\nint a[1010][1010];\nint ans;\nint tx,ty;\n\nint X[4]=&#123;1,-1,0,0&#125;;\nint Y[4]=&#123;0,0,1,-1&#125;;\n\nstruct zb &#123;\n  int x;\n  int y;\n&#125;;\nqueue&lt;zb&gt;b;\n\nbool operator==(const zb &amp;a,const zb &amp;b) &#123;\n  if(a.x==b.x&amp;&amp;a.y==b.y) &#123;\n    return true;\n  &#125;\n  return false;\n&#125;\n\nvoid outzb(zb b) &#123;\n  cout&lt;&lt;&quot;x=&quot;&lt;&lt;b.x&lt;&lt;&quot; y=&quot;&lt;&lt;b.y&lt;&lt;endl;\n  return;\n&#125;\n\nvoid out(/*zb x*/) &#123;\n  for(int i=1;i&lt;=n;i++) &#123;\n    for(int j=1;j&lt;=m;j++) &#123;\n      cout&lt;&lt;int(a[i][j]);\n    &#125;\n    cout&lt;&lt;endl;\n  &#125;\n  //cout&lt;&lt;&quot;x=&quot;&lt;&lt;x.x&lt;&lt;&quot; y=&quot;&lt;&lt;x.y;\n  cout&lt;&lt;&quot;ans=&quot;&lt;&lt;ans&lt;&lt;endl;\n  cout&lt;&lt;endl;\n&#125;\n\nbool bfs(int x,int y) &#123;\n  zb l,k,h;\n  int xx,yy;\n  l.x=x;l.y=y;\n  b.push(l);\n  zb ru=l;\n  while(!b.empty()) &#123;\n    k=b.front();\n    b.pop();\n    if(k.x==tx&amp;&amp;k.y==ty) &#123;\n      return true;\n    &#125;\n    //out(k);\n    for(int i=0;i&lt;4;i++) &#123;\n      h.x=xx=k.x+X[i];\n      h.y=yy=k.y+Y[i];\n      if(xx&lt;=0||xx&gt;n||yy&lt;=0||yy&gt;m||a[xx][yy]==1);\n      else &#123;\n        b.push(h);\n        a[xx][yy]=1;\n      &#125;\n    &#125;\n    if(k==ru) &#123;\n      ru=b.back();\n      ans++;\n    &#125;\n    //out();\n  &#125;\n  return false;\n&#125;\n\nint main() &#123;\n  char c;\n  int x,y;\n  cin&gt;&gt;n&gt;&gt;m;\n  for(int i=1;i&lt;=n;i++) &#123;\n    for(int j=1;j&lt;=m;j++) &#123;\n      cin&gt;&gt;c;\n      if(c=='S') &#123;\n        x=i;\n        y=j;\n        a[i][j]=1;\n      &#125; else if(c=='T') &#123;\n        tx=i;\n        ty=j;\n      &#125; else if(c=='#') &#123;\n        a[i][j]=1;\n      &#125;\n    &#125;\n  &#125;\n  if(bfs(x,y)) &#123;\n    cout&lt;&lt;ans&lt;&lt;endl;\n  &#125; else &#123;\n    cout&lt;&lt;&quot;-1&quot;&lt;&lt;endl;\n  &#125;\n  return 0;\n&#125;\n</code></pre>\n<h2 id=\"做法2-数组记录每个节点的层数\"><a class=\"markdownIt-Anchor\" href=\"#做法2-数组记录每个节点的层数\">#</a> 做法 2 - 数组记录每个节点的层数</h2>\n<h3 id=\"思路-2\"><a class=\"markdownIt-Anchor\" href=\"#思路-2\">#</a> 思路</h3>\n<p>直接开数组 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">a_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> 来判断此时层数（墙记录 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">a_{i,j}=-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span> )</p>\n<h3 id=\"代码-2\"><a class=\"markdownIt-Anchor\" href=\"#代码-2\">#</a> 代码</h3>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint n,m;\nint a[1010][1010];\nint tx,ty;\n\nint X[4]=&#123;1,-1,0,0&#125;;\nint Y[4]=&#123;0,0,1,-1&#125;;\n\nstruct zb &#123;\n  int x;\n  int y;\n&#125;;\nqueue&lt;zb&gt;b;\n\nbool operator==(const zb &amp;a,const zb &amp;b) &#123;\n  if(a.x==b.x&amp;&amp;a.y==b.y) &#123;\n    return true;\n  &#125;\n  return false;\n&#125;\nvoid outzb(zb b) &#123;\n  cout&lt;&lt;&quot;x=&quot;&lt;&lt;b.x&lt;&lt;&quot; y=&quot;&lt;&lt;b.y&lt;&lt;endl;\n  return;\n&#125;\n\nvoid out(zb x) &#123;\n  for(int i=1;i&lt;=n;i++) &#123;\n    for(int j=1;j&lt;=m;j++) &#123;\n      cout&lt;&lt;int(a[i][j]);\n    &#125;\n    cout&lt;&lt;endl;\n  &#125;\n  cout&lt;&lt;&quot;x=&quot;&lt;&lt;x.x&lt;&lt;&quot; y=&quot;&lt;&lt;x.y&lt;&lt;endl;\n  cout&lt;&lt;endl;\n&#125;\n\nbool bfs(int x,int y) &#123;\n  zb l,k,h;\n  int xx,yy;\n  l.x=x;l.y=y;\n  b.push(l);\n  while(!b.empty()) &#123;\n    k=b.front(); b.pop(); // 取出队首\n    if(k.x==tx&amp;&amp;k.y==ty) &#123; // 找到终点\n      return true; //返回\n    &#125;\n    //out(k);\n    for(int i=0;i&lt;4;i++) &#123; // 枚举上下左右\n      h.x=xx=k.x+X[i];\n      h.y=yy=k.y+Y[i];\n      if(xx&lt;=0||xx&gt;n||yy&lt;=0||yy&gt;m||a[xx][yy]!=0);\n      else &#123;\n        b.push(h);\n        a[h.x][h.y]=a[k.x][k.y]+1;\n      &#125;\n    &#125;\n    //outzb(ru);\n    //cout&lt;&lt;endl;\n  &#125;\n  return false;\n&#125;\n\nint main() &#123;\n  cin&gt;&gt;n&gt;&gt;m;\n  char c;\n  int x,y;\n  for(int i=1;i&lt;=n;i++) &#123;\n    for(int j=1;j&lt;=m;j++) &#123;\n      cin&gt;&gt;c;\n      if(c=='S') &#123;\n        x=i;\n        y=j;\n      &#125; else if(c=='T') &#123;\n        tx=i;\n        ty=j;\n      &#125; else if(c=='#') &#123;\n        a[i][j]=-1;\n      &#125;\n    &#125;\n  &#125;\n  if(bfs(x,y)) &#123;\n    cout&lt;&lt;a[tx][ty]&lt;&lt;endl;\n  &#125; else &#123;\n    cout&lt;&lt;&quot;-1&quot;&lt;&lt;endl;\n  &#125;\n  return 0;\n&#125;\n</code></pre>\n",
            "tags": [
                "517普及组"
            ]
        }
    ]
}